# This is a basic workflow that is manually triggered

name: Deploy to production

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: prod
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      run:
        terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform/
      shell: bash

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color -out tf.plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform/
      shell: bash

    - name: Terraform Show
      id: show
      run: |
        cd terraform
        terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
      working-directory: ./
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      shell: bash

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -input=false tf.plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./
      shell: bash
